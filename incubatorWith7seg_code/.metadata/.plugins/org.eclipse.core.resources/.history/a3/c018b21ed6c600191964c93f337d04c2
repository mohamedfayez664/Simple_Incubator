#include <avr/io.h>
#include <avr/interrupt.h>

#include "declare_IO.h"
#include "sev_seg_init.h"
#include "switches.h"
#include "fan_heater_buzzer.h"
#include "temp_hum_sensor.h"
#include "INT_Init.h"
#include "timer2.h"
//#include "TIMER_Init.h"

#define temp_sense  1
#define hum_sense 1
volatile uint16 actual_temp=0, actual_humidity=0;
uint8  const_temp=37 ,  const_hum=50 ;
uint8 in_t_flag=0 ,de_t_flag=0 ,in_h_flag=0 ,de_h_flag=0; //flags to avoid overflow in constant temperature and humidity
uint8 tim1=0,tim2=0;     //to set delay
uint8 set_temp_pres=0 ,set_hum_pres=0 ;

int main(void)
{
	////Configurations////
	seven_seg_init(); //initialize 7 segments
	switches_init();  // initialize switches
	actuaters_init();   //initialize fan ,heater and buzzer
	INT0_Init();  //run in rising edge
	INT1_Init();  //RUN in rising edge

	Timer_Start_Count();
	adc_init();
	//actual_temp = temp_sensor_read();
	actual_humidity=hum_sensor_read();
	while(1){
		//actual_temp=temp_sensor_read();
		_delay_ms(5);
		actual_humidity=hum_sensor_read();

		////////////////////////////////////////
		if(set_temp_pres){
			if(PIND&(1<<0)){
				tim1++;
				if(tim1==4){
					tim1=0;
					if(PIND&(1<<0)){      //increase temperature pin
						if(in_t_flag==0){ // to avoid overflow
							const_temp++;  //increase constant temperature
							in_t_flag=1;
						}
					}
				}
			}else in_t_flag=0;
			if(PIND&(1<<1)){ 		//decrease temperature pin
				tim1++;
				if(tim1==4){
					tim1=0;
					if(PIND&(1<<1)){
						if(de_t_flag==0){
							const_temp--;  //decrease constant temperature
							de_t_flag=1;
						}
					}
				}
			}else de_t_flag=0;
		}
		//////////////////////////////
		if(set_hum_pres){
			if(PIND&(1<<4)){   //increase humidity pin
				tim2++;
				if(tim2==4){
					tim2=0;
					if(PIND&(1<<4)){
						if(in_h_flag==0){
							const_hum++;   //increase constant humidity
							in_h_flag=1;
						}
					}
				}
			}else in_h_flag=0;

			if(PIND&(1<<5)){    //decrease humidity pin
				tim2++;
				if(tim2==4){
					tim2=0;
					if(PIND&(1<<5)){
						if(de_h_flag==0){
							const_hum--;   //decrease constant humidity
							de_h_flag=1;
						}
					}
				}
			}else de_h_flag=0;
		}
		dis_7_seg( actual_temp , const_temp ,actual_humidity,  const_hum);
		////////////////////////////////
		if((actual_temp>(const_temp+(temp_sense+1)))|(actual_humidity>(const_hum+(hum_sense+1)))|
				(actual_temp<(const_temp-(temp_sense+1)))|(actual_humidity<(const_hum-(hum_sense+1)))){
			buzzer_on();
		}else{
			buzzer_off();
		}
		////////////////
		if(actual_temp < (const_temp-temp_sense)){
			heater_on();
		}else{
			heater_off();
		}
		if(actual_humidity < (const_hum-hum_sense)){
			fan_on();
		}else{

			fan_off();
		}
	}
}
ISR(INT0_vect){
	if(set_temp_pres==0)
		set_temp_pres = 1;
	else
		set_temp_pres = 0;
}
ISR(INT1_vect){
	if(set_hum_pres==0)
		set_hum_pres = 1;
	else
		set_hum_pres = 0;
}
